package com.example.NurseManager;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

import com.example.patient_information.Patient;
import com.example.patient_information.VitalSign;

public class Physician implements Serializable{



	/**
	 * 
	 */
	private static final long serialVersionUID = 9147678430885141688L;

	/** This is Nurse's name */ 
	private String username;

	/** This is Nurse's password */
	private String password;

	private Map<String, Patient> patients;

	public Physician(String username, String password) {
		this.username = username;
		this.password = password;
	}

	public Physician(String username, String password, File dir, String fileName) throws IOException {

		this.username = username;
		this.password = password;
		this.patients = new HashMap<String, Patient>();

		File file = new File(dir, fileName);
		if (file.exists()){
			this.readFromFile(file.getPath());
		}
		else{
			file.createNewFile();
		}		
	}

	public String getUsername() {
		return username;
	}


	public String getPassword() {
		return password;
	}
	
	public Map<String, Patient> getPatients(){
		return patients;
	}
	
	@Override
	public String toString() {
		return username + ","+ password;
	}

	public void readFromFile(String filePath) throws FileNotFoundException {

		Scanner scanner = new Scanner(new FileInputStream(filePath));
		String [] record;

		while(scanner.hasNextLine()) {
			record = scanner.nextLine().split(",");
			int i = record.length;
			String[] name = record[0].split(" ");
			String[] dob = record[1].split("/");
			String[] cardnum = record[2].split(" ");
			String[] arrivedate = record[3].split("/");
			String[] arrivetime = record[4].split(":");

			Patient patient = new Patient(name[0], Integer.parseInt(dob[0]), 
					Integer.parseInt(dob[1]), Integer.parseInt(dob[2]),
					cardnum[0], Integer.parseInt(arrivetime[0]),
					Integer.parseInt(arrivetime[1]), Integer.parseInt(arrivedate[0]),
					Integer.parseInt(arrivedate[1]), Integer.parseInt(arrivedate[2]));
			
			if(!record[6].equals("No Description")){
				patient.setSeen_physician(record[6]);
			}


			patients.put(cardnum[0], patient);

			int n = 5;
			while (i - 5 != 0){
				String[] date = record[n].split("/");
				String[] time = record[n+1].split(":");
				String[] temperature = record[n+2].split(" ");
				String[] systolic = record[n+3].split(" ");
				String[] diastolic = record[n+4].split(" ");
				String[] heartrate = record[n+5].split(" ");
				VitalSign vitalsigns = new VitalSign(Double.valueOf(temperature[0]), 
						Integer.parseInt(systolic[0]), Integer.parseInt(diastolic[0]),
						Integer.parseInt(heartrate[0]), Integer.parseInt(time[0]),
						Integer.parseInt(time[1]), Integer.parseInt(date[0]), Integer.parseInt(date[1]),
						Integer.parseInt(date[2]));


				i = i - 6;
				n = n + 6;

				patient.addVitalsigns(vitalsigns);               	                	 
			}

		}
		scanner.close();
	}



}
